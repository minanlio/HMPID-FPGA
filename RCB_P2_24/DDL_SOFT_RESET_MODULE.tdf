--  
-- MODULO PER EFFETTUARE IL RESET DEL TTC: UTILIZZA UN CLOCK ESTERNO A QUELLI GENERATI A PARTIRE DAL TTC IN QUANTO
-- QUESTI SONO DISABILITATI DURANTE IL RESET
--

SUBDESIGN DDL_SOFT_RESET_MODULE
(
		CLOCK: INPUT; -- e' il segnale proveniente dal modulo di generazione del clock senza PLL
		RESETn: INPUT; 
		ENA_TTC_RESET_MODULE: INPUT; -- PROVIENE DAL  MODULO ddl_ctrlr 
		TTC_RESET_LENGHT[7..0]: INPUT;	-- PROVIENE DAL  MODULO ddl_ctrlr
		
		TTC_RESETn_int: OUTPUT; -- RIMANE ATTIVO FINO A CIRCA 5  sec 
		CLR_TTC_RESET_MODULE: OUTPUT; -- VA AL MODULO ddl_ctrlr; INDICA CHE IL RESET DEL TTC E' TERMINATO
		
		TTC_RESET_COUNTER[26..0]: OUTPUT; --TEST
		STATO[3..0]: OUTPUT;	
)

variable
TTC_RESET_COUNTER[26..0]: DFFE;
TTC_RESET_LENGHT_REG[7..0]: DFFE;
CLRN_TTC_RESET_COUNTER: NODE;
ENA_TTC_RESET_COUNTER: NODE;
ENA_TTC_RESET_LENGHT_REG: NODE;
--CLRN_TTC_RESET_LENGHT_REG: NODE;


	MODULE_SM :	MACHINE OF BITS (QB[1..0]) WITH STATES (

					IDLE,
					LOAD_TTC_RESET_LENGHT_REG,
					LOAD_TTC_RESET_LENGHT_REG1,
					TTC_RESET_STATE,
					FINAL_STATE,
					WELL_STATE
					
				);
------------------------------------------------------------------
------------------------------------------------------------------				
BEGIN		
------------------------------------------------------------------
DEFAULTS

CLRN_TTC_RESET_COUNTER = VCC;
ENA_TTC_RESET_COUNTER = GND;

ENA_TTC_RESET_LENGHT_REG = GND;
--CLRN_TTC_RESET_LENGHT_REG = VCC;

TTC_RESETn_int = VCC;	
CLR_TTC_RESET_MODULE = GND;
	
END DEFAULTS;



TTC_RESET_COUNTER[26..0].d = TTC_RESET_COUNTER[26..0].q + 1;
TTC_RESET_COUNTER[26..0].clk = !CLOCK;
TTC_RESET_COUNTER[26..0].ena = ENA_TTC_RESET_COUNTER;
TTC_RESET_COUNTER[26..0].clrn = RESETn AND CLRN_TTC_RESET_COUNTER;

TTC_RESET_LENGHT_REG[7..0].d = TTC_RESET_LENGHT[7..0];
TTC_RESET_LENGHT_REG[7..0].clk = !CLOCK;
TTC_RESET_LENGHT_REG[7..0].ena = ENA_TTC_RESET_LENGHT_REG;
TTC_RESET_LENGHT_REG[7..0].clrn = RESETn; --AND CLRN_TTC_RESET_LENGHT_REG;

MODULE_SM.clk = CLOCK; -- 500 KHz
MODULE_SM.reset = !RESETn;
-----------------------------------------------
-- LOCAL BUS STATE MACHINE
----------------------------------------------
CASE MODULE_SM is 

	WHEN IDLE => 
		TTC_RESETn_int = VCC;
		
		STATO[3..0] = H"0";
		
		IF ENA_TTC_RESET_MODULE THEN  
			MODULE_SM = LOAD_TTC_RESET_LENGHT_REG; 
		ELSE
			MODULE_SM = IDLE; 
		END IF;
		
	WHEN LOAD_TTC_RESET_LENGHT_REG =>
		TTC_RESETn_int = VCC;
		CLRN_TTC_RESET_COUNTER = GND;
		ENA_TTC_RESET_LENGHT_REG = VCC;	
		
		STATO[3..0] = H"1";
		
		MODULE_SM = LOAD_TTC_RESET_LENGHT_REG1;
	
	WHEN LOAD_TTC_RESET_LENGHT_REG1 =>
		TTC_RESETn_int = VCC;
		CLRN_TTC_RESET_COUNTER = VCC;
		ENA_TTC_RESET_LENGHT_REG = GND;
		
		STATO[3..0] = H"2";
		
		--MODULE_SM = TTC_RESET_STATE;
		IF (TTC_RESET_LENGHT_REG[7..0] == H"FF") THEN	
			MODULE_SM = WELL_STATE;
		ELSE
			MODULE_SM = TTC_RESET_STATE;
		END IF;
		
	WHEN WELL_STATE => -- STATO POZZO DA CUI ESCE SOLO DOPO SPEGNIMENTO O RIPROGRAMMAZIONE
		TTC_RESETn_int = GND;
		
		STATO[3..0] = H"5";
		
		MODULE_SM = WELL_STATE; 	
		
	WHEN TTC_RESET_STATE =>
		ENA_TTC_RESET_COUNTER = VCC;
		TTC_RESETn_int = GND;
		
		STATO[3..0] = H"3";
		
		IF (TTC_RESET_COUNTER[26..0] == (TTC_RESET_LENGHT_REG[7..0], H"FFFF", B"111")) THEN	
			MODULE_SM = FINAL_STATE;
		ELSE
			MODULE_SM = TTC_RESET_STATE;
		END IF; 
			
	WHEN FINAL_STATE =>
		ENA_TTC_RESET_COUNTER = GND;
		CLRN_TTC_RESET_COUNTER = GND;
		--CLRN_TTC_RESET_LENGHT_REG = GND;
		TTC_RESETn_int = VCC;
		CLR_TTC_RESET_MODULE = VCC;
		
		STATO[3..0] = H"4";
		
		IF ENA_TTC_RESET_MODULE THEN
			MODULE_SM = FINAL_STATE;
		ELSE
			MODULE_SM = IDLE;
		END IF;
		
	END CASE;
--------------------------------------------------------------------

-------------------------------------------------------------------------

END;
