--  
-- MODULO PER EFFETTUARE IL RESET DEL TTC: UTILIZZA UN CLOCK ESTERNO A QUELLI GENERATI A PARTIRE DAL TTC 
-- IN QUANTO QUESTI SONO DISABILITATI DURANTE IL RESET
--

SUBDESIGN GENERAL_RESET_MODULE
(
	-- INPUT	
		CLOCK: INPUT; -- segnale proveniente dal modulo di generazione del clock senza PLL
		RESETn: INPUT;
		-- ddlctrlr
		ENA_TTC_RESET_MODULE: INPUT; 
		
	-- OUTPUT
		TTC_RESETn_int: OUTPUT; -- RIMANE ATTIVO CIRCA 1s 
		-- ddlctrlr
		CLR_TTC_RESET_MODULE: OUTPUT; -- INDICA CHE IL RESET DEL TTC E' TERMINATO
		
)

variable

-----------------------------------------------------------
-- REGISTERS
-----------------------------------------------------------
TTC_RESET_COUNTER[15..0]: DFFE;

-----------------------------------------------------------
-- NODES
-----------------------------------------------------------
CLRN_TTC_RESET_COUNTER: NODE;
ENA_TTC_RESET_COUNTER: NODE;

------------------------------------------------------------
-- STATE MACHINES
------------------------------------------------------------
MODULE_SM :	MACHINE OF BITS (QB[1..0]) WITH STATES (

				IDLE,
				TTC_RESET_STATE,
				FINAL_STATE
				
			);
			
			
BEGIN		

DEFAULTS

CLRN_TTC_RESET_COUNTER = VCC;
ENA_TTC_RESET_COUNTER = GND;
TTC_RESETn_int = VCC;	
CLR_TTC_RESET_MODULE = GND;
	
END DEFAULTS;

TTC_RESET_COUNTER[15..0].d = TTC_RESET_COUNTER[15..0].q + 1;
TTC_RESET_COUNTER[15..0].clk = !CLOCK;
TTC_RESET_COUNTER[15..0].ena = ENA_TTC_RESET_COUNTER;
TTC_RESET_COUNTER[15..0].clrn = RESETn AND CLRN_TTC_RESET_COUNTER;

MODULE_SM.clk = CLOCK; -- AUTOCLOCK
MODULE_SM.reset = !RESETn;

-----------------------------------------------
-----------------------------------------------
-- TTCRx RESET STATE MACHINE
-----------------------------------------------
-----------------------------------------------

CASE MODULE_SM is 

	WHEN IDLE => 
		TTC_RESETn_int = VCC;
		IF ENA_TTC_RESET_MODULE THEN  
			MODULE_SM = TTC_RESET_STATE; 
		ELSE
			MODULE_SM = IDLE; 
		END IF;
				
	WHEN TTC_RESET_STATE =>
		ENA_TTC_RESET_COUNTER = VCC;
		TTC_RESETn_int = GND;
		IF (TTC_RESET_COUNTER[15..0] == (H"3000")) THEN	
			MODULE_SM = FINAL_STATE;
		ELSE
			MODULE_SM = TTC_RESET_STATE;
		END IF; 
			
	WHEN FINAL_STATE =>
		ENA_TTC_RESET_COUNTER = GND;
		CLRN_TTC_RESET_COUNTER = GND;
		TTC_RESETn_int = VCC;
		CLR_TTC_RESET_MODULE = VCC;
		IF ENA_TTC_RESET_MODULE THEN
			MODULE_SM = FINAL_STATE;
		ELSE
			MODULE_SM = IDLE;
		END IF;
		
	END CASE;

END;
