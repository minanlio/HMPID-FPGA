--  
-- MODULO PER EFFETTUARE IL RESET DA DDL DEL FIRMWARE
--

SUBDESIGN DDL_SOFT_RESET_MODULE
(
	-- INPUT
		CLOCK: INPUT;
		RESETn: INPUT;	
		
	-- BIDIREZIONALE	
		fbD[31..0]: BIDIR;
		
	-- OUTPUT	
		DDL_RESETn: OUTPUT; 
				
)

variable

-----------------------------------------------------------
-- REGISTERS
-----------------------------------------------------------
FE_REG[31..0]: DFF;
RESET_COUNTER[26..0]: DFFE;
RESET_LENGHT_REG[7..0]: DFFE;

-----------------------------------------------------------
-- NODES
-----------------------------------------------------------
CLRN_RESET_COUNTER: NODE;
ENA_RESET_COUNTER: NODE;
ENA_RESET_LENGHT_REG: NODE;

------------------------------------------------------------
-- STATE MACHINES
------------------------------------------------------------
RESET_SM: MACHINE WITH STATES (

				IDLE,
				LOAD_RESET_LENGHT_REG,
				LOAD_RESET_LENGHT_REG1,
				RESET_STATE,
				FINAL_STATE
			);

				
BEGIN		

DEFAULTS

CLRN_RESET_COUNTER = VCC;
ENA_RESET_COUNTER = GND;
ENA_RESET_LENGHT_REG = GND;
DDL_RESETn = VCC;	
	
END DEFAULTS;


FE_REG[31..0].d = fbD[31..0];
FE_REG[31..0].clk = clock; 
FE_REG[31..0].clrn = RESETn;

RESET_COUNTER[26..0].d = RESET_COUNTER[26..0] + 1;
RESET_COUNTER[26..0].clk = !CLOCK;
RESET_COUNTER[26..0].ena = ENA_RESET_COUNTER;
RESET_COUNTER[26..0].clrn = RESETn AND CLRN_RESET_COUNTER;

RESET_LENGHT_REG[7..0].d = FE_REG[19..12];
RESET_LENGHT_REG[7..0].clk = !CLOCK;
RESET_LENGHT_REG[7..0].ena = ENA_RESET_LENGHT_REG;
RESET_LENGHT_REG[7..0].clrn = RESETn;

RESET_SM.clk = CLOCK; 
RESET_SM.reset = !RESETn;


------------------------------------------------
------------------------------------------------
-- RESET STATE MACHINE
------------------------------------------------
------------------------------------------------

CASE RESET_SM is 

	WHEN IDLE => 
		DDL_RESETn = VCC;
		IF FE_REG[31..16] == H"004F" THEN  -- RESET SOTFWARE DA DDL DEL FIRMWARE  
			RESET_SM = LOAD_RESET_LENGHT_REG;  
		END IF;
		
	WHEN LOAD_RESET_LENGHT_REG =>
		DDL_RESETn = VCC;
		CLRN_RESET_COUNTER = GND;
		ENA_RESET_LENGHT_REG = VCC;	
		RESET_SM = LOAD_RESET_LENGHT_REG1;
	
	WHEN LOAD_RESET_LENGHT_REG1 =>
		DDL_RESETn = VCC;
		CLRN_RESET_COUNTER = VCC;
		ENA_RESET_LENGHT_REG = GND;
		RESET_SM = RESET_STATE; 	
		
	WHEN RESET_STATE =>
		ENA_RESET_COUNTER = VCC;
		DDL_RESETn = GND;
		IF (RESET_COUNTER[26..0] == (RESET_LENGHT_REG[7..0], H"FFFF", B"111")) THEN	
			RESET_SM = FINAL_STATE;
		END IF; 
			
	WHEN FINAL_STATE =>
		ENA_RESET_COUNTER = GND;
		CLRN_RESET_COUNTER = GND;
		DDL_RESETn = VCC;
		RESET_SM = IDLE;
		
	WHEN OTHERS =>
		RESET_SM = IDLE;
		
END CASE;

END;
